apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
version = '1.0'

jar {
    manifest {
        attributes 'Implementation-Title': 'Quality Care Robot',
                   'Implementation-Version': version
    }
}


sourceSets {
    main {
        java {
            srcDir '../src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    tests {
      java {
        srcDir '../src/main/java/modules/instruction'
      }

      output.classesDir '$buildDir/modules/instruction/'
    }    

    instruction {
      java {
        srcDir '../src/main/java/modules/instruction'
      }

      output.classesDir '$buildDir/modules/instruction/'
    }    
    services {
        java {
            srcDir '../src/main/java/modules/services'
        }

      output.classesDir '$buildDir/modules/services/'
    }
    processing {
        java {
            srcDir '../src/main/java/modules/processing'
        }

      output.classesDir '$buildDir/modules/processing/'
    }
    storagge {
        java {
            srcDir '../src/main/java/modules/storage'
        }
      output.classesDir '$buildDir/modules/storage/'
    }
    output {
        java {
            srcDir '../src/main/java/modules/output'
        }
      output.classesDir '$buildDir/modules/output/'
    }
    networking {
        java {
            srcDir '../src/main/java/modules/networking'
        }
      output.classesDir '$buildDir/modules/networking/'
    }
    movement {
        java {
            srcDir '../src/main/java/modules/modules'
        }
      output.classesDir '$buildDir/modules/movement/'
    }
    monitoring {
        java {
            srcDir '../src/main/modules/monitoring'
        }
      output.classesDir '$buildDir/modules/monitoring/'
    }
}


task release << {
  doFirst {
    buildDir = '../dist/release'
  }
  build
}

task debug << {
  doFirst {
    buildDir = '../dist/debugging'
  }
  assemble 
}

task testing <<{
  doFirst {
    buildDir = '../dist/testing'
  }
  build
}


task mainJavadoc(type: Javadoc) {
    source sourceSets.main.allJava
}

task mainTest(type: Test) {
    testClassesDir = sourceSets.main.output.classesDir
    classpath = sourceSets.main.runtimeClasspath
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
